version: '3.8'

volumes:
  local_postgres_data: {}
  local_postgres_data_backups: {}

x-django: &django
  image: docker.gitlab.gwdg.de/solve/atlas-web:local
  depends_on:
    - postgres
    - mailhog
  volumes:
    - .:/app:z
    - ./nfs:/app/nfs
  env_file:
    - ./.envs/.local/.django
    - ./.envs/.local/.postgres

services:
  django:
    <<: *django
    container_name: django
    ports:
      - "8000:8000"
    command: ["/start"]

  notebook:
    <<: *django
    container_name: notebook
    env_file:
      - ./.envs/.local/.django
      - ./.envs/.local/.postgres
    environment:
      JUPYTER_CONFIG_DIR: "/app/.jupyter"
      JUPYTER_DATA_DIR: "/app/.jupyter"
      JUPYTER_RUNTIME_DIR: "/tmp/runtime"
      DJANGO_ALLOW_ASYNC_UNSAFE: "True"
    command: ["python", "manage.py", "shell_plus", "--notebook"]
    ports:
      - "8888:8888"

  postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    image: docker.gitlab.gwdg.de/solve/atlas-web:local-postgres
    container_name: postgres
    volumes:
      - local_postgres_data:/var/lib/postgresql/data:Z
      - local_postgres_data_backups:/backups:z
    env_file:
      - ./.envs/.local/.postgres

  docs:
    image: docker.gitlab.gwdg.de/solve/atlas-web:docs
    container_name: docs
    build:
      context: .
      dockerfile: ./compose/local/docs/Dockerfile
    env_file:
      - ./.envs/.local/.django
    volumes:
      - ./docs:/docs:z
      - ./config:/app/config:z
      - ./atlas_web:/app/atlas_web:z
    ports:
      - "7000:7000"
    command: ["/start-docs"]

  mailhog:
    image: mailhog/mailhog:v1.0.0
    container_name: mailhog
    ports:
      - "8025:8025"

  redis:
    image: redis:5.0
    container_name: redis

  celeryworker:
    <<: *django
    container_name: celeryworker
    depends_on:
      - redis
      - postgres
      - mailhog
    entrypoint: [""]
    command: ["/start-celeryworker"]

  celerybeat:
    <<: *django
    container_name: celerybeat
    depends_on:
      - redis
      - postgres
      - mailhog
    entrypoint: [""]
    command: ["/start-celerybeat"]

  flower:
    <<: *django
    container_name: flower
    ports:
      - "5555:5555"
    entrypoint: [""]
    command: ["/start-celeryflower"]

  node:
    build:
      context: .
      dockerfile: ./compose/local/node/Dockerfile
    image: docker.gitlab.gwdg.de/solve/atlas-web:local-node
    container_name: node
    depends_on:
      - django
    volumes:
      - .:/app:z
      # http://jdlm.info/articles/2016/03/06/lessons-building-node-app-docker.html
      - /app/node_modules
    command: npm run dev
    ports:
      - "3000:3000"
      # Expose browsersync UI: https://www.browsersync.io/docs/options/#option-ui
      - "3001:3001"

networks:
  default:
    name: atlas
